\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
    \PYG{k}{if} \PYG{o}{(}\PYG{n}{earlyBreak}\PYG{o}{(}\PYG{n}{pError}\PYG{o}{))}
      \PYG{k}{return}\PYG{o}{;}
    \PYG{k}{if} \PYG{o}{(}\PYG{n}{failed}\PYG{o}{)}
      \PYG{k}{return}\PYG{o}{;}

    \PYG{n}{IRemoteLoggerCheckPoint} \PYG{n}{cp} \PYG{o}{=} \PYG{k}{new} \PYG{n}{TranslateableRemoteLoggerCheckPoint}\PYG{o}{(}\PYG{n}{pError}\PYG{o}{,} \PYG{n}{pTime}\PYG{o}{);}
    \PYG{n}{connectionHandler}\PYG{o}{.}\PYG{n+na}{writeCheckPoint}\PYG{o}{(}\PYG{n}{cp}\PYG{o}{);}
  \PYG{o}{\PYGZcb{}}

  \PYG{c+cm}{/**}
\PYG{c+cm}{   * Zerstört diesen Logger}
\PYG{c+cm}{   *}
\PYG{c+cm}{   * @throws AditoException Wird geworfen, wenn dieser Logger}
\PYG{c+cm}{   *                        nicht ordnungsgemäß beendet werden konnte}
\PYG{c+cm}{   */}
  \PYG{k+kd}{public} \PYG{k+kd}{synchronized} \PYG{k+kt}{void} \PYG{n+nf}{destroy}\PYG{o}{()} \PYG{k+kd}{throws} \PYG{n}{AditoException}
  \PYG{o}{\PYGZob{}}
    \PYG{k+kd}{super}\PYG{o}{.}\PYG{n+na}{destroy}\PYG{o}{();}
    \PYG{n}{failed} \PYG{o}{=} \PYG{k+kc}{true}\PYG{o}{;}
    \PYG{n}{RemoteLoggerInstanceManager}\PYG{o}{.}\PYG{n+na}{getInstance}\PYG{o}{().}\PYG{n+na}{shutdownRemoteLoggerHandler}\PYG{o}{(}\PYG{n}{connectionHandler}\PYG{o}{);}
  \PYG{o}{\PYGZcb{}}

  \PYG{c+cm}{/**}
\PYG{c+cm}{   * Erstellt eine String-Repräsentanz des RemoteLoggers}
\PYG{c+cm}{   *}
\PYG{c+cm}{   * @return Lesbarer String}
\PYG{c+cm}{   */}
  \PYG{k+kd}{public} \PYG{n}{String} \PYG{n+nf}{toString}\PYG{o}{()}
  \PYG{o}{\PYGZob{}}
    \PYG{k}{return} \PYG{l+s}{\PYGZdq{}RemoteLogger [\PYGZdq{}} \PYG{o}{+} \PYG{n}{priority} \PYG{o}{+} \PYG{l+s}{\PYGZdq{}]: \PYGZdq{}} \PYG{o}{+}
      \PYG{o}{(}\PYG{n}{connectionHandler} \PYG{o}{==} \PYG{k+kc}{null} \PYG{o}{?} \PYG{l+s}{\PYGZdq{}null\PYGZdq{}} \PYG{o}{:} \PYG{n}{connectionHandler}\PYG{o}{.}\PYG{n+na}{getSocketAddress}\PYG{o}{());}
  \PYG{o}{\PYGZcb{}}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
