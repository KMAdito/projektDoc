\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
  \PYG{c+cm}{/**}
\PYG{c+cm}{   * Erstellt einen ObjectInputStreamConsumer.}
\PYG{c+cm}{   * Dieser liest so lange Daten aus, bis ein shutdown angefragt wurde, oder ein}
\PYG{c+cm}{   * Fehler aufgetreten und der exceptionHandler einen Retry verweigert hat}
\PYG{c+cm}{   *}
\PYG{c+cm}{   * @param pIStream           InputStream, der ausgelesen werden soll.}
\PYG{c+cm}{   * @param pTName             Name des Threads, in dem der ObjectInputStreamConsumer läuft}
\PYG{c+cm}{   * @param pObjectConsumer    Erhält alle empfangenen Objekte des Consumers}
\PYG{c+cm}{   * @param pExceptionHandler  Erhält alle aufgetretenen Exceptions.}
\PYG{c+cm}{   *                           Wird in dieser Funktion <tt>true</tt> zurückgegeben, dann}
\PYG{c+cm}{   *                           wird versucht, erneut vom Stream zu lesen.}
\PYG{c+cm}{   *                           Bei <tt>false</tt> wird versucht, die Verbindung zu trennen.}
\PYG{c+cm}{   * @return Den zugehörigen ObjectInputStreamConsumer}
\PYG{c+cm}{   */}
  \PYG{k+kd}{public} \PYG{k+kd}{static} \PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}} \PYG{n}{ObjectInputStreamConsumer}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}} \PYG{n+nf}{consume}\PYG{o}{(}\PYG{n+nd}{@NotNull} \PYG{n}{InputStream} \PYG{n}{pIStream}\PYG{o}{,}
    \PYG{n+nd}{@Nullable} \PYG{n}{String} \PYG{n}{pTName}\PYG{o}{,} \PYG{n+nd}{@NotNull} \PYG{n}{Consumer}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}} \PYG{n}{pObjectConsumer}\PYG{o}{,}
    \PYG{n+nd}{@Nullable} \PYG{n}{Function}\PYG{o}{\PYGZlt{}}\PYG{n}{Exception}\PYG{o}{,} \PYG{n}{Boolean}\PYG{o}{\PYGZgt{}} \PYG{n}{pExceptionHandler}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{n}{ObjectInputStreamConsumer}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}} \PYG{n}{consumer} \PYG{o}{=}
      \PYG{k}{new} \PYG{n}{ObjectInputStreamConsumer}\PYG{o}{\PYGZlt{}\PYGZgt{}(}\PYG{n}{pIStream}\PYG{o}{,} \PYG{n}{pTName}\PYG{o}{,} \PYG{n}{pObjectConsumer}\PYG{o}{,} \PYG{n}{pExceptionHandler}\PYG{o}{);}
    \PYG{n}{ThreadPool}\PYG{o}{.}\PYG{n+na}{getInstance}\PYG{o}{().}\PYG{n+na}{execute}\PYG{o}{(}\PYG{n}{consumer}\PYG{o}{);}
    \PYG{k}{return} \PYG{n}{consumer}\PYG{o}{;}
  \PYG{o}{\PYGZcb{}}
  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{run}\PYG{o}{()}
  \PYG{o}{\PYGZob{}}
    \PYG{k}{if}\PYG{o}{(}\PYG{n}{threadName} \PYG{o}{!=} \PYG{k+kc}{null}\PYG{o}{)}
      \PYG{n}{Thread}\PYG{o}{.}\PYG{n+na}{currentThread}\PYG{o}{().}\PYG{n+na}{setName}\PYG{o}{(}\PYG{n}{threadName}\PYG{o}{);}

    \PYG{k}{while}\PYG{o}{(!}\PYG{n}{shutdownRequested}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{())}
    \PYG{o}{\PYGZob{}}
      \PYG{n}{Object} \PYG{n}{read}\PYG{o}{;}
      \PYG{k}{try}
      \PYG{o}{\PYGZob{}}
        \PYG{k}{while} \PYG{o}{((}\PYG{n}{read} \PYG{o}{=} \PYG{k}{new} \PYG{n}{ObjectInputStream}\PYG{o}{(}\PYG{n}{inputStream}\PYG{o}{).}\PYG{n+na}{readObject}\PYG{o}{())} \PYG{o}{!=} \PYG{k+kc}{null}\PYG{o}{)}
          \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{o}{!}\PYG{n}{shutdownRequested}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{())}
        \PYG{o}{\PYGZob{}}
          \PYG{n}{objectConsumer}\PYG{o}{.}\PYG{n+na}{accept}\PYG{o}{((}\PYG{n}{Type}\PYG{o}{)} \PYG{n}{read}\PYG{o}{);}
        \PYG{o}{\PYGZcb{}}
      \PYG{o}{\PYGZcb{}}
      \PYG{k}{catch} \PYG{o}{(}\PYG{n}{Exception} \PYG{n}{e}\PYG{o}{)}
      \PYG{o}{\PYGZob{}}
        \PYG{k}{if}\PYG{o}{(}\PYG{n}{exceptionHandler} \PYG{o}{!=} \PYG{k+kc}{null} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{o}{!}\PYG{n}{shutdownRequested}\PYG{o}{.}\PYG{n+na}{get}\PYG{o}{())}
        \PYG{o}{\PYGZob{}}
          \PYG{k}{if}\PYG{o}{(!}\PYG{n}{exceptionHandler}\PYG{o}{.}\PYG{n+na}{apply}\PYG{o}{(}\PYG{n}{e}\PYG{o}{))} \PYG{c+c1}{//Kein Retry gewünscht}
          \PYG{o}{\PYGZob{}}	
            \PYG{k}{try}
            \PYG{o}{\PYGZob{}}
              \PYG{n}{requestShutdown}\PYG{o}{();}
            \PYG{o}{\PYGZcb{}}
            \PYG{k}{catch} \PYG{o}{(}\PYG{n}{Exception} \PYG{n}{ex}\PYG{o}{)}
            \PYG{o}{\PYGZob{}}
              \PYG{n}{exceptionHandler}\PYG{o}{.}\PYG{n+na}{apply}\PYG{o}{(}\PYG{n}{ex}\PYG{o}{);}
            \PYG{o}{\PYGZcb{}}
          \PYG{o}{\PYGZcb{}}

          \PYG{k}{break}\PYG{o}{;}
        \PYG{o}{\PYGZcb{}}
      \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}

  \PYG{c+cm}{/**}
\PYG{c+cm}{   * Frägt an, dass sich der StreamConsumer bitte beenden würde.}
\PYG{c+cm}{   * Der anfängliche InputStream wird geschlossen!}
\PYG{c+cm}{   *}
\PYG{c+cm}{   * @throws AditoIOException IOException wenn ein Fehler aufgetreten ist}
\PYG{c+cm}{   */}
  \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{requestShutdown}\PYG{o}{()} \PYG{k+kd}{throws} \PYG{n}{AditoIOException}
  \PYG{o}{\PYGZob{}}
    \PYG{k}{try}
    \PYG{o}{\PYGZob{}}
      \PYG{n}{shutdownRequested}\PYG{o}{.}\PYG{n+na}{set}\PYG{o}{(}\PYG{k+kc}{true}\PYG{o}{);}
      \PYG{n}{inputStream}\PYG{o}{.}\PYG{n+na}{close}\PYG{o}{();}
    \PYG{o}{\PYGZcb{}}
    \PYG{k}{catch}\PYG{o}{(}\PYG{n}{Exception} \PYG{n}{e}\PYG{o}{)}
    \PYG{o}{\PYGZob{}}
      \PYG{c+c1}{// Stream konnte nicht geschlossen werden}
      \PYG{k}{throw} \PYG{k}{new} \PYG{n}{AditoIOException}\PYG{o}{(}\PYG{n}{e}\PYG{o}{,} \PYG{l+m+mi}{10}\PYG{o}{,} \PYG{l+m+mi}{403}\PYG{o}{);}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
