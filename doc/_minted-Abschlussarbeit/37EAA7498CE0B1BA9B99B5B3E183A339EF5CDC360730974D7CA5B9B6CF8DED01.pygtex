\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{c+cm}{/**}
\PYG{c+cm}{ * Model der RemoteLoggerTreeTable, zur Visualisierung von CheckPoints.}
\PYG{c+cm}{ * Stellt das Model der rechts-liegenden Tabelle dar (2. Teil der TreeTable)}
\PYG{c+cm}{ *}
\PYG{c+cm}{ * @see RemoteLoggerTreeDataProvider}
\PYG{c+cm}{ * @see RemoteLoggerTreeTable}
\PYG{c+cm}{ * @author W.Glanzer, 24.11.2015}
\PYG{c+cm}{ */}
\PYG{k+kd}{class} \PYG{n+nc}{RemoteLoggerTableModel} \PYG{k+kd}{extends} \PYG{n}{DefaultTreeModel} \PYG{k+kd}{implements} \PYG{n}{RowModel}
\PYG{o}{\PYGZob{}}
  \PYG{k+kd}{private} \PYG{k+kd}{final} \PYG{n}{DefaultMutableTreeNode} \PYG{n}{rootNode} \PYG{o}{=} \PYG{k}{new} \PYG{n}{DefaultMutableTreeNode}\PYG{o}{();}

  \PYG{k+kd}{public} \PYG{n+nf}{RemoteLoggerTableModel}\PYG{o}{()}
  \PYG{o}{\PYGZob{}}
    \PYG{k+kd}{super}\PYG{o}{(}\PYG{k+kc}{null}\PYG{o}{);}
    \PYG{n}{setRoot}\PYG{o}{(}\PYG{n}{rootNode}\PYG{o}{);}
  \PYG{o}{\PYGZcb{}}

  \PYG{c+cm}{/**}
\PYG{c+cm}{   * Fügt einen CheckPoint in das Model ein und lädt das Model neu}
\PYG{c+cm}{   *}
\PYG{c+cm}{   * @param pCheckPoint CheckPoint, der hinzugefügt werden soll, nicht <tt>null</tt>!}
\PYG{c+cm}{   */}
  \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{addCheckPoint}\PYG{o}{(}\PYG{n+nd}{@NotNull} \PYG{n}{IRemoteLoggerCheckPoint} \PYG{n}{pCheckPoint}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{n}{rootNode}\PYG{o}{.}\PYG{n+na}{add}\PYG{o}{(}\PYG{n}{\PYGZus{}toNode}\PYG{o}{(}\PYG{n}{pCheckPoint}\PYG{o}{));}
    \PYG{n}{reload}\PYG{o}{(}\PYG{n}{rootNode}\PYG{o}{);}
  \PYG{o}{\PYGZcb{}}

  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{k+kt}{int} \PYG{n+nf}{getColumnCount}\PYG{o}{()}
  \PYG{o}{\PYGZob{}}
    \PYG{k}{return} \PYG{l+m+mi}{2}\PYG{o}{;} \PYG{c+c1}{//+1 Tree-Spalte}
  \PYG{o}{\PYGZcb{}}

  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{n}{Object} \PYG{n+nf}{getValueFor}\PYG{o}{(}\PYG{n}{Object} \PYG{n}{node}\PYG{o}{,} \PYG{k+kt}{int} \PYG{n}{column}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{k}{return} \PYG{n}{node}\PYG{o}{;}
  \PYG{o}{\PYGZcb{}}

  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{n}{Class} \PYG{n+nf}{getColumnClass}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{column}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{k}{return} \PYG{n}{IRemoteLoggerCheckPoint}\PYG{o}{.}\PYG{n+na}{class}\PYG{o}{;}
  \PYG{o}{\PYGZcb{}}

  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{k+kt}{boolean} \PYG{n+nf}{isCellEditable}\PYG{o}{(}\PYG{n}{Object} \PYG{n}{node}\PYG{o}{,} \PYG{k+kt}{int} \PYG{n}{column}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{c+c1}{// Generell keine Editiermöglichkeit erlaubt!}
    \PYG{k}{return} \PYG{k+kc}{false}\PYG{o}{;}
  \PYG{o}{\PYGZcb{}}

  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{setValueFor}\PYG{o}{(}\PYG{n}{Object} \PYG{n}{node}\PYG{o}{,} \PYG{k+kt}{int} \PYG{n}{column}\PYG{o}{,} \PYG{n}{Object} \PYG{n}{value}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{c+c1}{// Generell keine Editiermöglichkeit erlaubt!}
  \PYG{o}{\PYGZcb{}}

  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{n}{String} \PYG{n+nf}{getColumnName}\PYG{o}{(}\PYG{k+kt}{int} \PYG{n}{column}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{k}{switch}\PYG{o}{(}\PYG{n}{column}\PYG{o}{)}
    \PYG{o}{\PYGZob{}}
      \PYG{k}{case} \PYG{l+m+mi}{0}\PYG{o}{:}
        \PYG{k}{return} \PYG{n}{Translator}\PYG{o}{.}\PYG{n+na}{getString}\PYG{o}{(}\PYG{l+m+mi}{16}\PYG{o}{,} \PYG{n}{IStaticResources}\PYG{o}{.}\PYG{n+na}{TEXT\PYGZus{}IDENTIFICATION}\PYG{o}{,}
                                     \PYG{n}{Locale}\PYG{o}{.}\PYG{n+na}{getDefault}\PYG{o}{());}

      \PYG{k}{case} \PYG{l+m+mi}{1}\PYG{o}{:}
        \PYG{k}{return} \PYG{n}{Translator}\PYG{o}{.}\PYG{n+na}{getString}\PYG{o}{(}\PYG{l+m+mi}{16}\PYG{o}{,} \PYG{n}{IStaticResources}\PYG{o}{.}\PYG{n+na}{TEXT\PYGZus{}MESSAGE}\PYG{o}{,}
                                     \PYG{n}{Locale}\PYG{o}{.}\PYG{n+na}{getDefault}\PYG{o}{());}

\PYG{n+nl}{      default:}
        \PYG{k}{return} \PYG{k+kc}{null}\PYG{o}{;}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}
\end{Verbatim}
