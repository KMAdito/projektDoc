\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
        \PYG{n}{currentConnection}\PYG{o}{.}\PYG{n+na}{close}\PYG{o}{();}
        \PYG{n}{currentConnection}\PYG{o}{.}\PYG{n+na}{removeListener}\PYG{o}{(}\PYG{n}{listenerController}\PYG{o}{);}
        \PYG{n}{currentConnection} \PYG{o}{=} \PYG{k+kc}{null}\PYG{o}{;}
      \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}}
    \PYG{k}{catch} \PYG{o}{(}\PYG{n}{Exception} \PYG{n}{e}\PYG{o}{)}
    \PYG{o}{\PYGZob{}}
      \PYG{k}{throw} \PYG{k}{new} \PYG{n}{AditoIOException}\PYG{o}{(}\PYG{n}{e}\PYG{o}{,} \PYG{l+m+mi}{16}\PYG{o}{,} \PYG{l+m+mi}{205}\PYG{o}{);}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}

  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{addListener}\PYG{o}{(}\PYG{n}{IRemoteLoggerListener} \PYG{n}{pLoggerListener}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{k+kd}{synchronized} \PYG{o}{(}\PYG{n}{listenerList}\PYG{o}{)}
    \PYG{o}{\PYGZob{}}
      \PYG{n}{listenerList}\PYG{o}{.}\PYG{n+na}{add}\PYG{o}{(}\PYG{n}{pLoggerListener}\PYG{o}{);}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}

  \PYG{n+nd}{@Override}
  \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{removeListener}\PYG{o}{(}\PYG{n}{IRemoteLoggerListener} \PYG{n}{pLoggerListener}\PYG{o}{)}
  \PYG{o}{\PYGZob{}}
    \PYG{k+kd}{synchronized} \PYG{o}{(}\PYG{n}{listenerList}\PYG{o}{)}
    \PYG{o}{\PYGZob{}}
      \PYG{n}{listenerList}\PYG{o}{.}\PYG{n+na}{remove}\PYG{o}{(}\PYG{n}{pLoggerListener}\PYG{o}{);}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}

  \PYG{c+cm}{/**}
\PYG{c+cm}{   * Erstellt die Connection}
\PYG{c+cm}{   *}
\PYG{c+cm}{   * @return Die Connection}
\PYG{c+cm}{   */}
  \PYG{n+nd}{@Nullable}
  \PYG{k+kd}{protected} \PYG{k+kd}{abstract} \PYG{n}{IRemoteLoggerClientConnection} \PYG{n+nf}{createConnection}\PYG{o}{()}
    \PYG{k+kd}{throws} \PYG{n}{AditoException}\PYG{o}{;}

  \PYG{c+cm}{/**}
\PYG{c+cm}{   * Listener der Nachrichten von der Connection}
\PYG{c+cm}{   * an alle eingeh√§ngten RemoteLogger verteilt}
\PYG{c+cm}{   */}
  \PYG{k+kd}{private} \PYG{k+kd}{class} \PYG{n+nc}{\PYGZus{}ControllingListener} \PYG{k+kd}{implements} \PYG{n}{IRemoteLoggerListener}
  \PYG{o}{\PYGZob{}}
    \PYG{n+nd}{@Override}
    \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{connectionStatusChanged}\PYG{o}{(}\PYG{k+kt}{boolean} \PYG{n}{pIsConnectedNow}\PYG{o}{)}
    \PYG{o}{\PYGZob{}}
      \PYG{k+kd}{synchronized} \PYG{o}{(}\PYG{n}{listenerList}\PYG{o}{)}
      \PYG{o}{\PYGZob{}}
        \PYG{n}{listenerList}\PYG{o}{.}\PYG{n+na}{forEach}\PYG{o}{(}\PYG{n}{pLoggerListener} \PYG{o}{\PYGZhy{}\PYGZgt{}}
          \PYG{n}{pLoggerListener}\PYG{o}{.}\PYG{n+na}{connectionStatusChanged}\PYG{o}{(}\PYG{n}{pIsConnectedNow}\PYG{o}{));}
      \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}}

    \PYG{n+nd}{@Override}
    \PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{checkPointReceived}\PYG{o}{(}\PYG{n+nd}{@NotNull} \PYG{n}{IRemoteLoggerCheckPoint} \PYG{n}{pCheckPoint}\PYG{o}{)}
    \PYG{o}{\PYGZob{}}
      \PYG{k+kd}{synchronized} \PYG{o}{(}\PYG{n}{listenerList}\PYG{o}{)}
      \PYG{o}{\PYGZob{}}
        \PYG{n}{listenerList}\PYG{o}{.}\PYG{n+na}{forEach}\PYG{o}{(}\PYG{n}{pLoggerListener} \PYG{o}{\PYGZhy{}\PYGZgt{}}
          \PYG{n}{pLoggerListener}\PYG{o}{.}\PYG{n+na}{checkPointReceived}\PYG{o}{(}\PYG{n}{pCheckPoint}\PYG{o}{));}
      \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
